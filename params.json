{"name":"Winser","body":"Run node.js applications as windows services using [nssm](http://nssm.cc).\r\n\r\n## Installation\r\n\r\n    $ npm install winser\r\n\r\n## Command line arguments\r\n  \r\n    -h, --help          output usage information\r\n    -V, --version       output the version number\r\n    -i, --install       install the node application as a windows service\r\n    -r, --remove        remove the windows service for the node application\r\n    -x, --stop          stop the service before uninstalling\r\n    -s, --silent        supress any information in the console\r\n    -c, --confirmation  ask for confirmation before installing/uninstalling\r\n    -p, --path [path]   path to the node application you want to install as a service [current directory]\r\n\r\n\r\n## Method 1\r\n\r\nI really like this method, in the package.json:\r\n\r\n```js\r\n  \"scripts\": {\r\n    \"postinstall\": \"winser -i -s -c\",\r\n    \"preuninstall\": \"winser -r -x -s\",\r\n  }\r\n```\r\n\r\nThen, in order to install a node application in lets say a server I will do this:\r\n\r\n```bash\r\n  npm install git://github.com/myprivate/repository/url.git\r\n```\r\n\r\nThe arguments in the **postinstall** script means:\r\n\r\n-  i install\r\n-  s silent, don't display any information\r\n-  c ask for confirmation. This is very helpfull because during development you don't want to install/uninstall the package as a windows service but you will often run \"npm install\" in the folder, then you can cancel with an 'n'.\r\n\r\nThe arguments in the **preuninstall** script means:\r\n\r\n-  x stop the service before uninstalling\r\n-  r remove the service\r\n-  s silent, don't display any information\r\n\r\n\r\n## Method 2\r\n\r\nAdd these two scripts to your package.json:\r\n\r\n```js\r\n  \"scripts\": {\r\n    \"install-windows-service\": \"winser -i\",\r\n    \"uninstall-windows-service\": \"winser -r\"\r\n  }\r\n```\r\n\r\nThen you can install your service as:\r\n\r\n```bash\r\n  npm run-script install-windows-service\r\n```\r\n\r\n## How it works\r\n\r\nWhen you install your node.js program as a windows service, your program is registered using nssm.exe (which is inside the module folder). Once you start the service nssm.exe is run and nssm.exe will execute \"npm start\" of your application.\r\n\r\nRemember that the default npm action for \"start\" is \"node server.js\".\r\n\r\nThe name of the service will be the same from your package.json \"name\" setting.\r\n\r\n## Credits\r\n\r\nThis project is heavily inspired in \r\n\r\n - [Node.js on windows by Tatham Oddie](http://blog.tatham.oddie.com.au/2011/03/16/node-js-on-windows/)\r\n\r\nAnd it uses:\r\n\r\n - [nssm](http://nssm.cc)\r\n","tagline":"Run node.js applications as windows services using nssm.","google":"UA-3648736-7","note":"Don't delete this file! It's used internally to help with page regeneration."}